# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: free disk space before starting docker
        run: |
          rm -rf /opt/hostedtoolcache
          sh print_resource.sh
          ls
          pwd
      - uses: actions/checkout@v3
      - name: Print Resource
        run: sh print_resource.sh

    container: 
      image: aglimage/agl:agl-ubuntu-gcc9.4.0-py3.8-cuda11.8-pytorch2.0.1-0825
      options: --privileged
    steps:
      - name: pwd dir
        run: |
          pwd
          ls
   
    
    
#    container: aglimage/agl:agl-ubuntu-gcc9.4.0-py3.8-cuda11.8-pytorch2.0.1-0825
#    steps:
#    - uses: actions/checkout@v3
#    - name: Print Resource
#      run: sh print_resource.sh
#    - uses: actions/setup-java@v3
#      with:
#        distribution: 'temurin'
#        java-version: '8'
#        cache: 'maven'
#    - name: free disk space before starting docker
#      run: |
#        rm -rf /opt/hostedtoolcache && sh print_resource.sh && sh start_docker.sh
#    - name: run docker
#      uses: docker://aglimage/agl:agl-ubuntu-gcc9.4.0-py3.8-cuda11.8-pytorch2.0.1-0825
#    - name: Build with Maven
#      run: mvn -B package --file pom.xml
